{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst token = localStorage.getItem(\"token\");\nconst refreshToken = localStorage.getItem(\"refreshToken\");\nconst initialState = {\n  isAuthenticated: !!token,\n  token: token,\n  refreshToken: refreshToken\n};\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    login(state, action) {\n      state.isAuthenticated = true;\n      state.token = action.payload.access_token;\n      state.refreshToken = action.payload.refreshToken;\n      localStorage.setItem(\"token\", action.payload.token);\n      localStorage.setItem(\"refreshToken\", action.payload.refreshToken);\n    },\n    logout(state) {\n      state.isAuthenticated = false;\n      state.token = null;\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"refreshToken\");\n    }\n  }\n});\nexport const {\n  login,\n  logout\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","token","localStorage","getItem","refreshToken","initialState","isAuthenticated","authSlice","name","reducers","login","state","action","payload","access_token","setItem","logout","removeItem","actions","reducer"],"sources":["/root/alx/EgyExpress/frontend/src/state/authSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\n\nconst token = localStorage.getItem(\"token\");\nconst refreshToken = localStorage.getItem(\"refreshToken\");\n\nconst initialState = {\n  isAuthenticated: !!token,\n  token: token,\n  refreshToken: refreshToken,\n};\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    login(state, action) {\n      state.isAuthenticated = true;\n      state.token = action.payload.access_token;\n      state.refreshToken = action.payload.refreshToken;\n      localStorage.setItem(\"token\", action.payload.token);\n      localStorage.setItem(\"refreshToken\", action.payload.refreshToken);\n    },\n    logout(state) {\n      state.isAuthenticated = false;\n      state.token = null;\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"refreshToken\");\n    },\n  },\n});\n\nexport const { login, logout } = authSlice.actions;\nexport default authSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAG9C,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;AAC3C,MAAMC,YAAY,GAAGF,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;AAEzD,MAAME,YAAY,GAAG;EACnBC,eAAe,EAAE,CAAC,CAACL,KAAK;EACxBA,KAAK,EAAEA,KAAK;EACZG,YAAY,EAAEA;AAChB,CAAC;AAED,MAAMG,SAAS,GAAGP,WAAW,CAAC;EAC5BQ,IAAI,EAAE,MAAM;EACZH,YAAY;EACZI,QAAQ,EAAE;IACRC,KAAKA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACnBD,KAAK,CAACL,eAAe,GAAG,IAAI;MAC5BK,KAAK,CAACV,KAAK,GAAGW,MAAM,CAACC,OAAO,CAACC,YAAY;MACzCH,KAAK,CAACP,YAAY,GAAGQ,MAAM,CAACC,OAAO,CAACT,YAAY;MAChDF,YAAY,CAACa,OAAO,CAAC,OAAO,EAAEH,MAAM,CAACC,OAAO,CAACZ,KAAK,CAAC;MACnDC,YAAY,CAACa,OAAO,CAAC,cAAc,EAAEH,MAAM,CAACC,OAAO,CAACT,YAAY,CAAC;IACnE,CAAC;IACDY,MAAMA,CAACL,KAAK,EAAE;MACZA,KAAK,CAACL,eAAe,GAAG,KAAK;MAC7BK,KAAK,CAACV,KAAK,GAAG,IAAI;MAClBC,YAAY,CAACe,UAAU,CAAC,OAAO,CAAC;MAChCf,YAAY,CAACe,UAAU,CAAC,cAAc,CAAC;IACzC;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEP,KAAK;EAAEM;AAAO,CAAC,GAAGT,SAAS,CAACW,OAAO;AAClD,eAAeX,SAAS,CAACY,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}